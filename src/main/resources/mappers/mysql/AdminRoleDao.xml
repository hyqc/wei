<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.wei.admin.dao.mysql.AdminRoleDao">
    <insert id="addAdminUserRoles">
        insert ignore into admin_user_role (`admin_id`, `role_id`)
        values
        <foreach collection="roleIds" item="roleId" index="key">
            (#{adminId},#{roleId})
            <if test="(key+1) lt roleIds.size()">
                ,
            </if>
        </foreach>
    </insert>
    <insert id="addAdminRole" parameterType="com.wei.admin.po.AdminRolePo">
        <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
            select LAST_INSERT_ID() as id
        </selectKey>
        insert into admin_role
        (`name`,`describe`,`is_enabled`,`create_admin_id`,`modify_admin_id`,`create_time`,`modify_time`)
        values (#{name},#{describe},#{enabled}, #{createAdminId}, #{modifyAdminId},#{createTime},#{modifyTime})
    </insert>
    <insert id="addAdminRolePermission">
        insert into admin_role_permission (`role_id`,`permission_id`) values
        <foreach collection="permissionIds" item="permissionId" separator=",">
            (#{roleId},#{permissionId})
        </foreach>
    </insert>
    <update id="editAdminRole">
        update admin_role set `modify_admin_id` = #{modifyAdminId},`modify_time` = #{modifyTime}
        <if test="name != null and name.length >0">
            ,`name` = #{name}
        </if>
        <if test="describe != null">
            ,`describe` = #{describe}
        </if>
        <if test="modifyTime != null">
            ,`modify_time` = #{modifyTime}
        </if>
        <if test="enabled != null">
            ,`is_enabled` = #{enabled}
        </if>
        where `id` = #{id}
    </update>
    <delete id="deleteAdminUserRolesByCondition">
        delete from admin_user_role where `admin_id` = #{adminId}
        <if test="roleIds != null and roleIds.size() > 0">
            and `role_id` not in
            <foreach collection="roleIds" item="roleId" open="(" close=")" separator=",">
                #{roleId}
            </foreach>
        </if>
    </delete>
    <delete id="deleteAdminRolePermissions">
        delete from admin_role_permission where `role_id` = #{roleId}
    </delete>
    <delete id="deleteAdminUserRolesByAdminId">
        delete from admin_user_role where `admin_id` = #{adminId}
    </delete>
    <delete id="deleteAdminRoleByRoleId">
        delete from admin_role where id = #{id} and `is_enabled` = 0
    </delete>
    <select id="getAdminUserRolesByAdminId" resultType="java.lang.Integer">
        select `role_id` roleId from admin_user_role `admin_id` = #{adminId}
    </select>
    <select id="selectAdminRoleList" resultType="com.wei.admin.bo.RoleListItem">
        SELECT ar.id roleId, ar.name roleName,ar.create_time createDateTime,ar.modify_time modifyDateTime,
        ar.create_admin_id createAdminId,au.username createAdminName,ar.`is_enabled` enabled
        FROM admin_role ar
        INNER JOIN admin_user au ON au.id = ar.create_admin_id
        where 1
        <if test="item.roleId != null and item.roleId > 0">
            and ar.id = #{item.roleId}
        </if>
        <if test="item.roleName != null and item.roleName.length > 0">
            and ar.name like "%${item.roleName}%"
        </if>
        <if test="item.enabled != null">
            <if test="item.enabled == true ">
                and ar.is_enabled = 1
            </if>
            <if test="item.enabled == false ">
                and ar.is_enabled = 0
            </if>
        </if>
        <if test="startTime != null">
            and ar.create_time >= #{startTime}
        </if>
        <if test="endTime != null">
            and <![CDATA[  ar.create_time <= #{endTime} ]]>
        </if>
        order by ${params.sortField} ${params.sortType}
    </select>
    <select id="findAdminRoleById" resultType="com.wei.admin.po.AdminRolePo">
        select `id`, `name`,`describe`,`modify_admin_id` modifyAdminId, `create_admin_id` createAdminId,
        `is_enabled` enabled, `create_time` createTime, `modify_time` modifyTime
        from admin_role
        where id = #{id}
    </select>
    <select id="selectRolesByRoleIds" resultType="java.lang.Integer">
        select ar.id roleId from admin_role ar
        where ar.id_enabled = 1 and ar.id in
        <foreach collection="roleIds" item="roleId" open="(" close=")" separator=",">
            #{roleId}
        </foreach>
        order by ar.id asc
    </select>
    <select id="findAdminRoleDetail" resultType="com.wei.admin.bo.RoleDetail">
        select a.`id`, a.`name`,a.`describe`,a.`modify_admin_id` modifyAdminId,c.username modifyAdminName,
        a.`create_admin_id` createAdminId,b.username createAdminName,a.`is_enabled` enabled,
        a.`create_time` createTime, a.`modify_time` modifyTime
        from admin_role a
        left join admin_user b on b.id = a.create_admin_id
        left join admin_user c on c.id = a.modify_admin_id
        where a.id = #{id}
    </select>
    <select id="selectAdminRolePermissionAllByRoleId" resultType="com.wei.admin.bo.RolePermissionItem">
        select a.`role_id` roleId, a.`permission_id` permissionId,b.`key` permissionKey, b.`name`
        permissionName,b.`type` permissionType
        from admin_role_permission a
        inner join admin_permission b on b.`id` = a.`permission_id`
        where b.`is_enabled` = 1 and `role_id` = #{roleId}
    </select>
    <select id="selectAdminRoleAll" resultType="com.wei.admin.bo.RoleListItem">
        select id roleId,name roleName from admin_role where `is_enabled` = 1
        <if test="params.roleId != null and params.roleId > 0">
            and id = #{params.id}
        </if>
        <if test="params.roleName != null and params.roleName.length > 0">
            and name like "%${params.name}%"
        </if>
    </select>
</mapper>